@inject IConfiguration Configuration
@{
    ViewData["Title"] = "Diadiem";
    Layout = "~/Views/Shared/_Layout_charity.cshtml";
}
<!-- Page Header Start -->
<div class="container-fluid page-header1 py-5 wow fadeIn" data-wow-delay="0.1s">
    <div class="container text-center py-5">
        <h1 class="display-2 text-white mb-4">About Us</h1>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb justify-content-center mb-0">
                <li class="breadcrumb-item"><a href="#">Home</a></li>
                <li class="breadcrumb-item"><a href="#">Pages</a></li>
                <li class="breadcrumb-item text-white" aria-current="page">About Us</li>
            </ol>
        </nav>
    </div>
</div>
<!-- Page Header End -->
<head>
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no" />
    <meta name="mobile-web-app-capable" content="yes">
    <script src="https://cdn.jsdelivr.net/npm/@@goongmaps/goong-js@1.0.9/dist/goong-js.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/@@goongmaps/goong-js@1.0.9/dist/goong-js.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500&display=swap">

    <style>
        body {
            margin: 0;
            padding: 0;
        }

        .map-container {
            position: relative;
            height: 100vh; /* Full screen height */
        }

        #map {
            width: 100%; /* Set map width */
            height: 100%; /* Set map height */
            border: 1px solid #ddd; /* Optional border */
        }

        .search-bar1 {
            position: absolute;
            top: 10px;
            left: 50%;
            transform: translateX(-50%);
            background: white;
            padding: 6px 10px;
            border-radius: 6px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            z-index: 1; /* Đảm bảo thanh tìm kiếm ở trên bản đồ */
            display: flex;
            gap: 6px;
            width: 60%; /* Tăng chiều dài của thanh tìm kiếm */
            max-width: 400px; /* Đặt chiều dài tối đa */
            font-family: 'Roboto', sans-serif; /* Áp dụng font chữ tiếng Việt */
        }

            .search-bar1 input {
                border: 1px solid #ddd;
                padding: 6px;
                border-radius: 4px;
                outline: none;
                flex: 1; /* Cho input chiếm nhiều không gian hơn */
                font-size: 14px;
            }

            .search-bar1 button {
                padding: 6px 12px;
                background-color: #007bff;
                color: white;
                border: none;
                border-radius: 4px;
                cursor: pointer;
                font-size: 14px;
                display: flex;
                align-items: center;
            }
    </style>
</head>
<body>
    <script src="https://cdn.jsdelivr.net/npm/@@mapbox/polyline/src/polyline.js"></script>
    <script src="https://unpkg.com/@@goongmaps/goong-sdk/umd/goong-sdk.min.js"></script>
    <section id="foodies" class="my-5">
        <div class="container map-container">
            <!-- Search Bars for Destination and User's Address -->
            <div class="search-bar1">
                <input type="text" id="user-address" placeholder="Nhập địa chỉ của bạn" />
            </div>
            <div class="search-bar1">
                <input type="text" id="search-input" placeholder="Nhập địa điểm quyên góp" onkeypress="if(event.key === 'Enter') searchLocation()" />
                <button onclick="searchLocation()">Tìm Kiếm</button>
            </div>
            <!-- Map -->
            <div id="map"></div>

            <script>
                var accessToken = '@Configuration["GoongMap:MaptilesKey"]';
                goongjs.accessToken = accessToken;

                var map = new goongjs.Map({
                    container: 'map',
                    style: 'https://tiles.goong.io/assets/goong_map_web.json',
                    center: [105.79449389547807, 21.023262952893536],
                    zoom: 8
                });

                var markers = [
                    [105.79449389547807, 21.023262952893536],
                    [105.79969171424, 21.03145698011039],
                    [105.7463049346494, 21.038202237863658],
                    [105.8449280838239, 21.03606203346743],
                    [105.84872309736471, 21.009139690306966],
                    [105.89861318021843, 21.06003589119038],
                    [105.34241795451874, 20.82357592939995],
                    [106.05056351778904, 20.6800965470578],
                    [104.88130233508849, 21.71023507970105]
                ];

                markers.forEach(function (coord) {
                    new goongjs.Marker()
                        .setLngLat(coord)
                        .addTo(map);
                });






                // Variable to keep track of the current route ID
                let currentRouteId = null;
                // Variable to store the current search marker
                let currentSearchMarker = null;

                // Function to add a route to the map
                function addRoute(currentLocation, destination, routeId) {
                    var goongClient = goongSdk({
                        accessToken: '@Configuration["APIKey:MaptilesKey"]'
                    });

                    goongClient.directions
                        .getDirections({
                            origin: `${currentLocation.lat},${currentLocation.lng}`,
                            destination: `${destination[1]},${destination[0]}`,
                            vehicle: 'car'
                        })
                        .send()
                        .then(function (response) {
                            var directions = response.body;
                            var route = directions.routes[0];

                            var geometry_string = route.overview_polyline.points;
                            var geoJSON = polyline.toGeoJSON(geometry_string);

                            // Remove any previous route before adding a new one
                            if (currentRouteId) {
                                removeRoute(currentRouteId);
                            }

                            // Add the new route to the map
                            map.addSource(routeId, {
                                'type': 'geojson',
                                'data': geoJSON
                            });

                            map.addLayer({
                                'id': routeId,
                                'type': 'line',
                                'source': routeId,
                                'layout': {
                                    'line-join': 'round',
                                    'line-cap': 'round'
                                },
                                'paint': {
                                    'line-color': '#1e88e5',
                                    'line-width': 8
                                }
                            });

                            // Update the currentRouteId with the new route ID
                            currentRouteId = routeId;
                        });
                }

                // Function to remove a route from the map
                function removeRoute(routeId) {
                    if (map.getLayer(routeId)) {
                        map.removeLayer(routeId);
                    }
                    if (map.getSource(routeId)) {
                        map.removeSource(routeId);
                    }
                }

                // Get the user's current location and initialize markers with click event
                navigator.geolocation.getCurrentPosition(function (position) {
                    var currentLocation = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };

                    map.flyTo({ center: [currentLocation.lng, currentLocation.lat], zoom: 12 });

                    // Add a marker for the user's current location
                    new goongjs.Marker({ color: 'red' })
                        .setLngLat([currentLocation.lng, currentLocation.lat])
                        .addTo(map);

                    // Loop through each destination marker
                    markers.forEach(function (destination, index) {
                        var marker = new goongjs.Marker()
                            .setLngLat(destination)
                            .addTo(map);

                        var routeId = `route-${index}`;

                        // Show route on marker click
                        marker.getElement().addEventListener('click', function () {
                            addRoute(currentLocation, destination, routeId);
                        });
                    });
                }, function (error) {
                    console.error("Error obtaining location:", error);
                    alert("Unable to retrieve your location.");
                });

                function searchLocation() {
                    var query = document.getElementById("search-input").value;
                    if (!query) {
                        alert("Vui lòng nhập địa chỉ quyên góp.");
                        return;
                    }

                    var apiKey = '@Configuration["APIKey:MaptilesKey"]';
                    var url = `https://rsapi.goong.io/Geocode?address=${encodeURIComponent(query)}&api_key=${apiKey}`;

                    fetch(url)
                        .then(response => response.json())
                        .then(data => {
                            if (data.results && data.results.length > 0) {
                                var result = data.results[0];
                                var lngLat = [result.geometry.location.lng, result.geometry.location.lat];

                                map.flyTo({ center: lngLat, zoom: 12 });

                                // Remove any existing search marker
                                if (currentSearchMarker) {
                                    currentSearchMarker.remove();
                                }

                                // Just update map center without adding a new marker
                            } else {
                                alert("Không tìm thấy địa điểm, vui lòng thử lại.");
                            }
                        });
                }

                map.addControl(
                    new GoongGeocoder({
                        accessToken: '@Configuration["APIKey:MaptilesKey"]',
                        goongjs: goongjs
                    })
                );

    </script>

        </div>
    </section>


        <section id="register" style="height: 100vh; background-image: url('/User/images/background.jpg'); background-size: cover; background-position: center;">
            <div class="container h-100 d-flex justify-content-center align-items-center">
                <div class="row w-100 d-flex justify-content-center">
                    <div class="col-md-8">
                        <!-- Phần chứa h6 -->
                        <div class="text-center mb-4">
                            <h6 class="display-4 fw-normal">Đăng ký quyên góp cùng Green Cycle</h6>
                        </div>
                        <div class="form-wrapper p-4" style="background-color: rgba(255, 255, 255, 0.85); border-radius: 15px; max-width: 100%; display: flex; flex-direction: column; align-items: center;">
                            <form style="width: 100%;">
                                <div class="row">
                                    <!-- Form Left Section -->
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="fullname" class="form-label">Họ tên</label>
                                            <input type="text" class="form-control form-control-md" name="fullname" id="fullname" placeholder="Nhập Họ tên của bạn" required>
                                        </div>
                                        <div class="mb-3">
                                            <label for="email" class="form-label">Email</label>
                                            <input type="email" class="form-control form-control-md" name="email" id="email" placeholder="Nhập địa chỉ Email của bạn" required>
                                        </div>
                                        <div class="mb-3">
                                            <label for="address" class="form-label">Địa chỉ</label>
                                            <input type="text" class="form-control form-control-md" name="address" id="address" placeholder="Nhập địa chỉ đến quyên góp" required>
                                        </div>
                                    </div>
                                    <!-- Form Right Section -->
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="donation-item" class="form-label">Sản phẩm muốn từ thiện</label>
                                            <input type="text" class="form-control form-control-md" name="donation-item" id="donation-item" placeholder="Nhập sản phẩm bạn muốn từ thiện" required>
                                        </div>
                                        <div class="mb-3">
                                            <label for="donation-date" class="form-label">Ngày đến quyên góp</label>
                                            <input type="date" class="form-control form-control-md" name="donation-date" id="donation-date" required>
                                        </div>
                                        <div class="mb-3">
                                            <label for="donation-time" class="form-label">Giờ đến quyên góp</label>
                                            <input type="time" class="form-control form-control-md" name="donation-time" id="donation-time" required>
                                        </div>
                                    </div>
                                </div>
                                <!-- Nút đăng ký căn giữa -->
                                <div class="d-flex justify-content-center">
                                    <button type="submit" class="btn btn-dark btn-lg rounded-1">Đăng ký</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </section>

</body>
