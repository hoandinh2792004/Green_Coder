name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted
    steps:
    - name: Install Chocolatey
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force; 
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12; 
        iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
      shell: powershell

    - name: Install Git
      run: choco install git -y
      shell: powershell

    - name: Check Git Version
      run: git --version
      shell: powershell

    - name: Manually clone repository
      run: |
        git clone --depth=1 https://github.com/hoandinh2792004/Green_coder.git repo
      shell: powershell

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Change directory to `repo` for all dotnet commands
    - name: Restore dependencies and stop IIS service
      run: |
        cd repo
        dotnet restore
        Stop-Service -Name "GreenCycleIISWebService" -ErrorAction SilentlyContinue
      shell: powershell

    - name: Build the project
      run: |
        cd repo
        dotnet publish -c Release -o ../built
      shell: powershell

    - name: Deploy files to IIS Server
      run: |
          if (!(Test-Path -Path "C:\inetpub\wwwroot\greencycle.btecit.tech")) {
            New-Item -ItemType Directory -Force -Path "C:\inetpub\wwwroot\greencycle.btecit.tech"
          }
          Get-ChildItem -Path "C:\inetpub\wwwroot\greencycle.btecit.tech" -Exclude "web.config", "appsettings.json" | Remove-Item -Recurse -Force
          Copy-Item -Path "built\*" -Destination "C:\inetpub\wwwroot\greencycle.btecit.tech" -Recurse -Force -Exclude "web.config", "appsettings.json"
      shell: powershell

    - name: Run tests
      run: |
        cd repo
        dotnet test --no-build --verbosity normal
      shell: powershell

    - name: Start IIS Web Project Service
      run: Start-Service -Name "GreenCycleIISWebService"
      shell: powershell

    - name: Recycle IIS Application Pool
      run: |
        Import-Module WebAdministration
        Restart-WebAppPool -Name "greencycle.btecit.tech"
      shell: powershell

    - name: Clear Temp Files
      run: |
        if (Test-Path -Path "C:\Temp") {
          Remove-Item -Path "C:\Temp\*" -Force -Recurse
        }
      shell: powershell
